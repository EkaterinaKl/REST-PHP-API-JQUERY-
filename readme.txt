Описание методов, параметров и ответа

1.	findByAdress()- выдача всех организаций находящихся в конкретном здании (поиск осуществляется по адресу )
параметры
function findByAdress ($adress) 
$adress - строка, содержащая адрес
формат ответа
result - false или true, в зависимости от результата
error - сообщение об ошибке
count – информация о количестве найденных записей
items - массив объектов результата
	name - имя организации
adress - адрес организации
вызов
var posting = $.post( “php/api.php”, { adress: term, id_type:settings } );
2.	findByCat() - список всех организаций, которые относятся к указанной рубрике
параметры
function findByCat ($id_ca, $action) 
$id_ca – число, номер категории
$action – строка, пустой параметр для вызова данного метода
формат ответа
result - false или true, в зависимости от результата
error - сообщение об ошибке
count – информация о количестве найденных записей
items - массив объектов результа
	name - имя организации
вызов
var posting = $.post( “php/api.php”, { id_ca: term } );
3.	findByCoord()- список всех организаций, которые находятся в пределах ограничивающего контура – круга, квадрата или прямоугольника
параметры
function findByCoord ($num_x, $num_y, $num_R, $num_x1, $num_y1,$id_type) 
$num_x – число, координата центра Х
$num_y – число, координата центра У
$num_R – число, радиус круга/квадрата (половина стороны)
$num_x1– число, координата Х верхнего правого угла ограничивающего прямоугольника, растянутого симметрично относительно точки центра в обе стороны 
 $num_y1– число,  координата У верхнего правого угла ограничивающего прямоугольника, растянутого симметрично относительно точки центра в обе стороны
$id_type –число, тип ограничивающего контура: 1 – круг, 2 – квадрат, 3 –прямоугольник
формат ответа
result - false или true, в зависимости от результата
error - сообщение об ошибке
count – информация о количестве найденных записей
items - массив объектов результата
	name - имя организации
	х- координата здания, в котором она располагается
y- координата здания, в котором она располагается
вызов
var posting = $.post( “php/api.php”, { num_x: num_x,   num_y: num_y, num_R : num_R, num_x1: num_x1,    num_y1 : num_y1, id_type:settings } );
4.	findBuildings () - список всех зданий 
параметры
function findBuildings ($action)
$action– строка, для вызова данного метода принимает значение 'list'
формат ответа
result - false или true, в зависимости от результата
error - сообщение об ошибке
count – информация о количестве найденных записей
items - массив объектов результата
	name – адрес здания 
вызов
var posting = $.post( “php/api.php’, { action: action } );
5.	findByID () - выводит всю имеющуюся информацию по идентификатору
параметры
function findByID ($id_c) 
$id_c – число, идентификатор организации
формат ответа
result - false или true, в зависимости от результата
error - сообщение об ошибке
count – информация о количестве найденных записей
items - массив объектов результата
	name - имя организации
	phones- список телефонов организации
path- список категорий вплоть до корня, в которые входит организация
вызов
var posting = $.post( “php/api.php”, { id_c: term } );
6.	getTree( )- выводит дерево рубрик каталога (технология Nested Tables ) со всеми предками, с возможностью фильтрации по потомкам конкретного узла 
параметры
function getTree($action, $id_ca )
$action– строка, для вызова данного метода принимает значение 'getTree'
$id_ca – число, номер категории (необязательный, если не указан – то выводятся все записи каталога)
формат ответа
result - false или true, в зависимости от результата
error - сообщение об ошибке
count – информация о количестве найденных записей
items - массив объектов результата
	tree- дерево каталога в html формата
вызов
var posting = $.post( “php/api.php”, { id_ca: term, action:action } );
7.	findByName$name() - поиск организации по названию.
параметры
function findByName($name)
$name - строка, содержащая название
формат ответа
result - false или true, в зависимости от результата
error - сообщение об ошибке
count – информация о количестве найденных записей
items - массив объектов результата
	name - имя организации
	adress – адрес организации
вызов
var posting = $.post( “php/api.php”, { name: name } );
